# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: import-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x

# you can overwrite defaults here
  stage: dev
  region: us-east-1

  httpApi:
    cors: true
    authorizers:
      basicHttpAuthorizer:
        type: request
        functionArn: arn:aws:lambda:us-east-1:810215748827:function:authorization-service-dev-basicAuthorizer
        enableSimpleResponses: true

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        "s3:ListBucket"
      Resource:
        "arn:aws:s3:::bicycle-store-imports"
    - Effect: "Allow"
      Action: 
        "s3:*"
      Resource:
        "arn:aws:s3:::bicycle-store-imports/*"

  environment:
    CATALOG_ITEM_QUEUE_URL: ${cf:product-service-dev.catalogItemsQueueUrl}

custom:
  client:
    bucketName: bicycle-store-imports
  s3BucketName: ${self:custom.client.bucketName}
  dotenv:
    path: ../.env

plugins:
  - serverless-dotenv-plugin


# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
 patterns:
  - "../node_modules/csv-parser/**"

functions:
  importProductsFile:
    handler: handlers/importProducts.importProductsFile
    events:
      - httpApi:
          path: /import
          method: GET
          authorizer:
            name: basicHttpAuthorizer
    environment:
      importBucket: ${self:custom.s3BucketName}
  importFileParser:
    handler: handlers/importFileParser.importFileParser
    events:
      - s3:
          bucket: ${self:custom.s3BucketName}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
    environment:
      importBucket: ${self:custom.s3BucketName}
